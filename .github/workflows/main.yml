name: Build and Test with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Clone-repo:
    name: Clone down repo and install dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Clones the repository

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Specify the Node.js version you want to use

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}  # Use package-lock.json to create a unique cache key
          restore-keys: |
            ${{ runner.os }}-npm-
        
      - name: Install dependencies
        run: npm install
    
  Lint:
    needs: [Clone-repo]
    runs-on: ubuntu-latest

    steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Install dependencies
          run: npm install
  
        - name: Run ESLint
          run: npm run lint

#   Build:
#     runs-on: ubuntu-latest

#     services:
#       docker:
#         image: docker:20.10.7  
#         options: --privileged
#         ports:
#           - 2375:2375

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: ~/.docker/buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Set up Docker
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y docker-compose

#       - name: Build and start services with Docker Compose
#         run: |
#           docker-compose -f docker-compose.yml build  
#           docker-compose -f docker-compose.yml up -d

#       - name: Shut down Docker Compose services
#         run: |
#           docker-compose down
