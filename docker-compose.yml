version: '3.8'
services:
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app-network

  api-gateway:
    image: ${DOCKER_USERNAME}/todo-list:api-gateway
    build: 
      context: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    depends_on:
      - user-service
      - task-service
    networks:
      - app-network

  user-service:
    image: ${DOCKER_USERNAME}/todo-list:user-service
    build:
      context: ./user-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
    networks:
      - app-network

  task-service:
    image: ${DOCKER_USERNAME}/todo-list:task-service
    build:
      context: ./task-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    image: ${DOCKER_USERNAME}/todo-list:frontend
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    ports:
      - "8080:80" 
    environment:
      - API_URL=http://api-gateway:3000
      - USER_SERVICE_URL=http://user-service:3002/
      - TASK_SERVICE_URL=http://task-service:3001/
    depends_on:
      - api-gateway

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge