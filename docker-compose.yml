version: '3.8'
services:
  mongodb:
    image: ${DOCKER_USERNAME}/todo-list:mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network

  mongo-express:
    image: ${DOCKER_USERNAME}/todo-list:mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL}
    depends_on:
      - mongodb
    networks:
      - app-network

  api-gateway:
    image: ${DOCKER_USERNAME}/todo-list:api-gateway
    build: 
      context: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    depends_on:
      - user-service
      - task-service
    networks:
      - app-network

  user-service:
    image: ${DOCKER_USERNAME}/todo-list:user-service
    build:
      context: ./user-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGODB_URI=${MONGODB_URI_USER_SERVICE}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
    networks:
      - app-network

  task-service:
    image: ${DOCKER_USERNAME}/todo-list:task-service
    build:
      context: ./task-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI_TASK_SERVICE}
    depends_on:
      - mongodb
    networks:
      - app-network

  frontend:
    image: ${DOCKER_USERNAME}/todo-list:frontend
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    ports:
      - "8080:80" 
    environment:
      - API_URL=http://api-gateway:3000
      - USER_SERVICE_URL=http://user-service:3002/
      - TASK_SERVICE_URL=http://task-service:3001/
    depends_on:
      - api-gateway

volumes:
  mongodb_data: 

networks:
  app-network:
    driver: bridge